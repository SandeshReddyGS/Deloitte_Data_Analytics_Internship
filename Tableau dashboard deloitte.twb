<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.13l37i507342jh1dcxs7v13hijxc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.1kqupi517bw1dn1bj0yuf19or3km'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Sandesh Reddy G S/Desktop/Deloitte Data Analytics internship' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1kqupi517bw1dn1bj0yuf19or3km' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_742812529554862080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/SANDES~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0sbo1xx06u6ee01ejxyf01dn05h9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/09/2025 03:44:52 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6398</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_C61B9EBFB55647828AABFCBB9F6DF9C1'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1kqupi517bw1dn1bj0yuf19or3km' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_627CE616B65341A8A98A9C053943EF7F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Downtime per Factory ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Downtime per Factory '>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.13l37i507342jh1dcxs7v13hijxc' />
          </datasources>
          <datasource-dependencies datasource='federated.13l37i507342jh1dcxs7v13hijxc'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_742812529554862080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_742812529554862080]' derivation='Sum' name='[sum:Calculation_742812529554862080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13l37i507342jh1dcxs7v13hijxc].[sum:Calculation_742812529554862080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13l37i507342jh1dcxs7v13hijxc].[sum:Calculation_742812529554862080:qk]</rows>
        <cols>[federated.13l37i507342jh1dcxs7v13hijxc].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{301D925A-A4A0-4DF0-B46E-501165FD37EB}' />
    </worksheet>
    <worksheet name='Downtime per Machine'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.13l37i507342jh1dcxs7v13hijxc' />
          </datasources>
          <datasource-dependencies datasource='federated.13l37i507342jh1dcxs7v13hijxc'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_742812529554862080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status]= &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_742812529554862080]' derivation='Sum' name='[sum:Calculation_742812529554862080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13l37i507342jh1dcxs7v13hijxc].[Action (Factory)]'>
            <groupfilter function='level-members' level='[factory]' user:ui-action-filter='[Action1_627CE616B65341A8A98A9C053943EF7F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13l37i507342jh1dcxs7v13hijxc].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13l37i507342jh1dcxs7v13hijxc].[sum:Calculation_742812529554862080:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13l37i507342jh1dcxs7v13hijxc].[sum:Calculation_742812529554862080:qk]</rows>
        <cols>[federated.13l37i507342jh1dcxs7v13hijxc].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{65F6D829-AFF9-4BBF-9F5B-02EC0C687F39}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Downtime per Factory ' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Downtime per Machine' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='6' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Downtime per Factory ' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Downtime per Machine' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{273D71FF-B7F1-4E75-8670-3AB96FDF11DC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Downtime per Factory '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13l37i507342jh1dcxs7v13hijxc].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F83D7945-A296-4D45-BB18-881398222388}' />
    </window>
    <window class='worksheet' name='Downtime per Machine'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13l37i507342jh1dcxs7v13hijxc].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5B218AD-B51B-44B1-AC6C-49B5F7C2BD6A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Downtime per Factory '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Downtime per Machine'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{963D0833-EA68-465D-A223-D0C42E5B8AF2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      /wMC5JBn3GTdXwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Downtime per Factory ' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Downtime per Machine' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
